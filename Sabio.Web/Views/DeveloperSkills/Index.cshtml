@model Sabio.Web.Models.ViewModels.JobSkillsViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_layoutSantaCruz.cshtml";
}

<div class="main-container">

    <div class="main">


        <h1 class="page-title">Job Seeker Skills</h1>

        <br />

        <div class="skills-container">

            <form class="form" id="JobSeekerSkillsForm">

                <div class="row">
                    <div class="col-md-6 educationLevel form-group">
                        <div><h3>Education Level: <span id="educationLevelViewData"></span></h3>
                        
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="educationLevel" value="1" id="radioEducationHighSchool" />
                                High School(GED)
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="educationLevel" value="2" id="radioEducationCollege" />
                                College (BA, BS)
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="educationLevel" value="3" id="radioEducationGraduateSchool" />
                                Graduate Degree (Masters, Doctoral)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group">
                        <h3>Years of Experience: <span id="yearsOfExperienceViewData"></span></h3>
                        <label>
                            <select class="form-control" type="singleselect" name="yearsOfExperience" id="selectYearsOfExperience">
                                <option value="0" id="optionYears0">None</option>
                                <option value="1" id="optionYears1">1</option>
                                <option value="2" id="optionYears2">2</option>
                                <option value="3" id="optionYears3">3</option>
                                <option value="4" id="optionYears4">4</option>
                                <option value="5" id="optionYears5">5</option>
                                <option value="6" id="optionYears6">6</option>
                                <option value="7" id="optionYears7">7</option>
                                <option value="8" id="optionYears8">8</option>
                                <option value="9" id="optionYears9">9</option>
                                <option value="10" id="optionYears10">10+</option>
                            </select>
                        </label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 skills form-group">
                        <h3>Stack: <span id="frontEndViewData"></span><span id="backEndViewData"></span><span id="networkViewData"></span></h3>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="frontEnd" value="true" id="chkFrontEnd">Front End
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="backEnd" value="true" id="chkBackEnd">Back End
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="network" value="true" id="chkNetwork">Network
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 certifications form-group">
                        <h3>Certifications: <span id="certificationsViewData"></span></h3>
                        <label></label>
                        <textarea class="form-control" type="text" name="certifications" rows="5" id="textAreaCertifications" placeholder="Separate your certifications by commas."></textarea>
                    </div>
                </div>
            </form>
            <br />
            <div class="submit"><button class="btn btn-default" type="submit" id="cmdSave">Go Back to Profile Page</button></div>

        </div>
    </div>
</div>

@section scripts{

    <script type="text/javascript">

        sabio.page.educationLevels = @Html.Raw(  Json.Encode(Model.EducationLevels))   ;


    </script>

    <script type="text/javascript" src="~/Scripts/sabio.services.jobseeker.js"></script>

    <script type="text/javascript">

        sabio.page.startUp = function () {
            $("#cmdSave").on("click", sabio.page.handlers.onCmdSave);
            sabio.page.validateForm();
            sabio.page.handlers.onDocReadyGetView();
            //call oncmdsave every 3 seconds.
            //setInterval(sabio.page.handlers.onCmdSave, 3000);
        }

        sabio.page.validateForm = function () {
            var validateOptions = {
                rules: {
                    educationLevel: {
                        required: true
                    },
                    yearsOfExperience: {
                        required: true
                    }
                },
                messages: {
                    yearsOfExperience: "How long have you been coding?"
                }
            }
            $("#JobSeekerSkillsForm").validate(validateOptions);
        }

        sabio.page.translateEducation = function (education) {
            /*
            if you decide to use enums, then you must use this line instead.
            return sabio.page.educationLevels[education];
            */
            switch (education){
                case 2:
                    $("#radioEducationCollege").attr("checked", "checked");
                    return education = "College";
                    break;
                case 3:
                    $("#radioEducationGraduateSchool").attr("checked", "checked");
                    return education = "Graduate School";
                    break;
                default:
                    $("#radioEducationHighSchool").attr("checked", "checked");
                    return education = "High School";
            }
        }

        sabio.page.translateYears = function (years) {
            
            switch (years){
                case 0:
                    $("#optionsYears0").attr("selected", true);
                    return years = "none";
                case 1:
                    $("#optionYears1").attr("selected", true);
                    return years;
                case 2:
                    $("#optionYears2").attr("selected", true);
                    return years;
                case 3:
                    $("#optionYears3").attr("selected", true);
                    return years;
                case 4:
                    $("#optionYears4").attr("selected", true);
                    return years;
                case 5:
                    $("#optionYears5").attr("selected", true);
                    return years;
                case 6:
                    $("#optionYears6").attr("selected", true);
                    return years;
                case 7:
                    $("#optionYears7").attr("selected", true);
                    return years;
                case 8:
                    $("#optionYears8").attr("selected", true);
                    return years;
                case 9:
                    $("#optionYears9").attr("selected", true);
                    return years;
                case 10:
                    $("yearsOption10").attr("selected", true);
                    return years = "10 or more years of experience";
            }
        }

        sabio.page.translateFront = function (front) {
            if (front == true) {
                $("#chkFrontEnd").attr("checked", true);
                return front = " Front Stack";
            } else {
                return front;
            }
        }
        sabio.page.translateBack = function (back) {
            if (back == true) {
                $("#chkBackEnd").attr("checked", true);
                return back = " Back Stack";
            } else {
                return back;
            }
        }
        sabio.page.translateNetwork = function (network) {
            if (network == true) {
                $("#chkNetwork").attr("checked", true);
                return network = " Network and Server";
            }
            return network;
        }
        
        sabio.page.translateCertifications = function (certifications){
            if (certifications){
                $("#textAreaCertifications").html(certifications);
                return certifications;
            }
            return certifications;
        }

        sabio.page.renderJobSeekerSkills = function (education, years, front, back, network, certifications) {

            education = sabio.page.translateEducation(education);
            $("#educationLevelViewData").html(education);

            years = sabio.page.translateYears(years);
            $("#yearsOfExperienceViewData").html(years);

            front = sabio.page.translateFront(front);
            $("#frontEndViewData").html(front);

            back = sabio.page.translateBack(back);
            $("#backEndViewData").html(back);

            network = sabio.page.translateNetwork(network);
            $("#networkViewData").html(network);

            certifications = sabio.page.translateCertifications(certifications);
            $("#certificationsViewData").html(certifications);
        }

        sabio.page.handlers.onDocReadyGetView = function (){
            sabio.services.jobseeker.get(sabio.page.handlers.onViewSuccess, sabio.page.handlers.onViewError)
        }

        sabio.page.handlers.onViewSuccess = function (data) {
            console.log(data);
            var edu = data.item.educationLevel;
            var years = data.item.yearsOfExperience;
            var front = data.item.frontEnd;
            var back = data.item.backEnd;
            var network = data.item.network;
            var certifications = data.item.certifications;

            sabio.page.renderJobSeekerSkills(edu, years, front, back, network, certifications);
        }

        sabio.page.handlers.onViewError = function () {
            alert("uh oh there's an error in your ajax get call");
        }

        sabio.page.handlers.onPostSuccess = function (event) {
            sabio.page.handlers.onDocReadyGetView();
        }
        sabio.page.handlers.onPostError = function () {
            alert("Errored out");
        }


        sabio.page.handlers.onCmdSave = function () {
            var isFormValid = $("#JobSeekerSkillsForm").valid();

            if (isFormValid) {
                var serializedForm = $("#JobSeekerSkillsForm").serialize();
                sabio.services.jobseeker.save(serializedForm, sabio.page.handlers.onPostSuccess, sabio.page.handlers.onPostError);
            }
        }
        

    </script>
}