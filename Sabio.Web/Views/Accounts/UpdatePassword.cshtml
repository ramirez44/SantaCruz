@model Sabio.Web.Models.ViewModels.ItemViewModel<Guid>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_layoutSantaCruz.cshtml";
}

<section class="main-container">
    <div class="container">
        <div class="row">

            <div class="main col-md-8" id="invalidTokenContainer" hidden>
                <h1 class="page-title">Invalid Token</h1>
                <p>Please go to the Forgot Password page and start again.</p>

            </div>

            <div class="main col-md-8" id="resetPasswordFormContainer" hidden>

                <h1 class="page-title">Password Reset Station</h1>
                <p>Pick a decent password for your <span id="userEmail"></span> account. Hackers rule the world now.</p>

                <div class="reset-password-form">
                    <form id="resetPasswordForm" role="form">
                        <div class="form-group has-feedback hidden" hidden>
                            <label for="aspNetUsersId"></label>
                            <input type="text" class="form-control" id="aspNetUsersId" name="aspNetUsersId" value="" />
                        </div>

                        <div class="form-group has-feedback hidden" hidden>
                            <label for="forgotPasswordToken"></label>
                            <input type="text" class="form-control" id="forgotPasswordToken" name="forgotPasswordToken" value="@Model.Item"/>
                        </div>

                        <div class="form-group has-feedback">
                            <label for="password">Password</label>
                            <input type="password" class="form-control" id="inputPassword" name="password" placeholder="Min 8 char (1 upper / 1 lower), 1 number, 1 speechul char" />
                        </div>

                        <div class="form-group has-feedback">
                            <label for="confirmPassword">Confirm Password</label>
                            <input type="password" class="form-control" id="inputConfirmPassword" name="confirmPassword" />
                        </div>
                        
                        <input type="submit" value="Submit" id="cmdSubmit" class="btn btn-default" />
                    </form>
                </div>

            </div>

        </div>

    </div>
    <!-- MODAL HERE -->
    <div class="modal fade" id="modalContainer" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                    <h4 class="modal-title" id="modalTitleContent"></h4>
                </div>
                <div class="modal-body" id="modalBodyContent">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- main-container end -->

</section>

@section scripts{

    <script type="text/javascript">
        sabio.page.startUp = function () {
            //hidden token validation ajax call. if the return is null, you should not be setting up the form. 
            sabio.page.validateForgotPasswordToken();
            //form validation
            sabio.page.setUpValidationRules();
            //specific password validation method
            $.validator.addMethod("pwcheck", function (value) {
                return /^[A-Za-z0-9\d!@@#$%^&*()-_+=~`]/.test(value) &&
                    /\d/.test(value) &&
                    /[A-Z]/.test(value) &&
                    /[~`!@@#$%^&*()-_=+]/.test(value)
            });
            //submit form
            $("#cmdSubmit").on("click", sabio.page.handlers.onCmdSubmit);
            
        }

        sabio.page.validateForgotPasswordToken = function () {
            var token = $("#forgotPasswordToken").val();
            var url = "/api/accounts/validateforgotpasswordtoken/" + token;
            var myData = null;
            var settings = {
                cache: false,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                data: myData,
                dataType: "json",
                success: sabio.page.handlers.onGetSuccessValidateToken,
                error: sabio.page.handlers.onGetErrorValidateToken,
                type: "GET"
            };
            $.ajax(url,settings);
        }

        sabio.page.handlers.onGetSuccessValidateToken = function (data, status, xhr) {
            console.log(data);
            if (data.item == null) {
                $("#invalidTokenContainer").show();
                var title = "Error!";
                var body = "Your info is not in the database.";
                var button = "Okay";
                sabio.page.showLayoutModal(title, body, button);

            }

            else {
                console.log(data);
                $("#aspNetUsersId").val(data.item.id);
                $("#userEmail").text(data.item.email);
                $("#resetPasswordFormContainer").show();

            }
            
        }

        sabio.page.handlers.onGetErrorValidateToken = function (){
            var title = "Error!";
            var body = "Contact Customer Service, server does not recognize your link.";
            var button = "okay";
            sabio.page.showLayoutModal(title, body, button);
        }


        sabio.page.setUpValidationRules = function () {
            var validationOptions = {
                rules: {
                    password: {
                        required: true,
                        minlength: 8,
                        pwcheck: true
                    },
                    confirmPassword: {
                        required: true,
                        equalTo: "#inputPassword",
                        minlength: 8
                    }
                },
                messages: {
                    password: {
                        pwcheck: "Your pwd must contain an upper case, number, and special character."
                    },
                    confirmPassword: {
                        required: "Please confirm your password.",
                        equalTo: "Your passwords do not match."
                    }

                }
            };
            $("#resetPasswordForm").validate(validationOptions);
        }

        sabio.page.updateNewPassword = function () {
            var url = "/api/accounts/updatepassword";
            var myData = $("#resetPasswordForm").serialize();
            var settings = {
                cache: false,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                data: myData,
                dataType: "json",
                success: sabio.page.handlers.onPutSuccessUpdatePassword,
                error: sabio.page.handlers.onPutErrorUpdatePassword,
                type: "PUT"
            };

            console.log(myData);
            $.ajax(url, settings);
        }

        sabio.page.handlers.onPutSuccessUpdatePassword = function() {
            var title = "Success";
            var body = "Your password was updated! Go to the <a href='http://santacruz.dev/login'>login page</a> to log in!"
            var button = "Okay";
            sabio.page.showLayoutModal(title, body, button);

        }

        sabio.page.handlers.onPutErrorUpdatePassword = function(data) {
            var title = "Server Error";
            var body = "Nope, your password was not updated";
            var button = "Okay";
            sabio.page.showLayoutModal(title, body, button);
        }

        sabio.page.handlers.onCmdSubmit = function (event){
            event.preventDefault();
            var isFormValid = $("#resetPasswordForm").valid();

            if (isFormValid == true){
                sabio.page.updateNewPassword();
            }
        }




    </script>

}